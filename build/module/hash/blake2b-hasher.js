import { Hasher } from '.';
import blake2b from 'blake2b';
import { Reader } from '..';
export class Blake2bHasher extends Hasher {
    constructor() {
        const h = blake2b(32, null, null, new Uint8Array(Reader.fromRawString('ckb-default-hash').toArrayBuffer()));
        super(h);
    }
    update(data) {
        let array;
        if (data instanceof Reader) {
            /** Reader type params not enter this branch, it's weired */
            array = Buffer.from(data.replace('0x', ''));
        }
        else if (data instanceof ArrayBuffer) {
            array = Buffer.from(new Uint8Array(data));
        }
        else if (typeof data === 'string') {
            array = Buffer.from(data);
        }
        else {
            array = Buffer.from(new Uint8Array(new Reader(data).toArrayBuffer()));
        }
        this.h.update(array);
        return this;
    }
    digest() {
        const out = new Uint8Array(32);
        this.h.digest(out);
        return new Reader(out.buffer);
    }
    reset() {
        this.h = blake2b(32, null, null, new Uint8Array(Reader.fromRawString('ckb-default-hash').toArrayBuffer()));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmxha2UyYi1oYXNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvaGFzaC9ibGFrZTJiLWhhc2hlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBQzNCLE9BQU8sT0FBTyxNQUFNLFNBQVMsQ0FBQztBQUM5QixPQUFPLEVBQW1CLE1BQU0sRUFBRSxNQUFNLElBQUksQ0FBQztBQUU3QyxNQUFNLE9BQU8sYUFBYyxTQUFRLE1BQU07SUFDdkM7UUFDRSxNQUFNLENBQUMsR0FBRyxPQUFPLENBQ2YsRUFBRSxFQUNGLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQ3pFLENBQUM7UUFDRixLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRUQsTUFBTSxDQUFDLElBQTBCO1FBQy9CLElBQUksS0FBYSxDQUFDO1FBQ2xCLElBQUksSUFBSSxZQUFZLE1BQU0sRUFBRTtZQUMxQiw0REFBNEQ7WUFDNUQsS0FBSyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUUsSUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN6RDthQUFNLElBQUksSUFBSSxZQUFZLFdBQVcsRUFBRTtZQUN0QyxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzNDO2FBQU0sSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDbkMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDM0I7YUFBTTtZQUNMLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUNqQixJQUFJLFVBQVUsQ0FBRSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQXFCLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FDdEUsQ0FBQztTQUNIO1FBQ0QsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsTUFBTTtRQUNKLE1BQU0sR0FBRyxHQUFHLElBQUksVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLE9BQU8sSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLENBQUMsR0FBRyxPQUFPLENBQ2QsRUFBRSxFQUNGLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQ3pFLENBQUM7SUFDSixDQUFDO0NBQ0YifQ==